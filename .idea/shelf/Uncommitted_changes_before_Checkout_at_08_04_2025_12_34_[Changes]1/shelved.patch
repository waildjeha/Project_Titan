Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Project 1.2: Manned Mission to Titan Simulation\r\n\r\nThis project simulates a manned mission to Titan, one of Saturn's moons, and back to Earth. It features:\r\n\r\n* **Ordinary Differential Equation (ODE) Solver:** For accurate trajectory calculations.\r\n* **Graphical User Interface (GUI):** Visualizes the trajectories of planets and the spaceship.\r\n* **Orbital Mechanics Simulation:** Accurately simulates bringing the spaceship into orbit.\r\n\r\n## System Requirements\r\n\r\nThis project is designed to run on most systems, as it doesn't have intensive performance requirements. However, you must have a Java Development Kit (JDK) installed.\r\n\r\n## Getting Started\r\n\r\nFollow these steps to run the simulation:\r\n\r\n**1. Install Maven:**\r\n\r\n* Ensure you have Maven installed and configured in your system's PATH environment variable.\r\n* Download Maven from the official [Apache Maven website](https://maven.apache.org/).\r\n* Follow the installation instructions for your operating system.\r\n\r\n**2. Clone the Repository:**\r\n\r\n* Open your preferred command-line terminal (e.g., Terminal on macOS/Linux, Command Prompt or PowerShell on Windows).\r\n* Use the following command to clone the repository:\r\n\r\n    ```bash\r\n    git clone https://github.com/waildjeha/Project_Titan\r\n    ```\r\n\r\n**3. Navigate to the Cloned Folder:**\r\n\r\n* Use the `cd` command to navigate to the cloned project directory:\r\n\r\n    ```bash\r\n    cd Project_titan\r\n    ```\r\n\r\n    * Alternatively, you can open the cloned folder directly in your preferred Integrated Development Environment (IDE), such as IntelliJ IDEA or Eclipse.\r\n\r\n**4. Build and Run the Project:**\r\n\r\n* **Clean the Project:**\r\n    * To clean any previously built artifacts, run the following Maven command:\r\n\r\n        ```bash\r\n        mvn clean\r\n        ```\r\n\r\n* **Run the Simulation:**\r\n\r\n    * **Using an IDE:**\r\n        * If you are using an IDE, navigate to the `src/main/java` directory.\r\n        * Locate the `App.java` file.\r\n        * Run the `App.java` file as a Java application within your IDE.\r\n    * **Using the Command Line:**\r\n        * If you prefer to run the simulation from the command line, use the following Maven command:\r\n\r\n            ```bash\r\n            mvn javafx:run\r\n            ```\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
+++ b/README.md	(date 1743429766785)
@@ -26,7 +26,7 @@
 * Use the following command to clone the repository:
 
     ```bash
-    git clone https://github.com/waildjeha/Project_Titan
+    git clone [https://github.com/waildjeha/Project_1_2](https://github.com/waildjeha/Project_Titan)
     ```
 
 **3. Navigate to the Cloned Folder:**
@@ -60,4 +60,3 @@
             ```bash
             mvn javafx:run
             ```
-
Index: Project_Titan/src/main/java/com/ken10/NumericalSolvers/LotkaVolterraForPlanets.java
===================================================================
diff --git a/Project_Titan/src/main/java/com/ken10/NumericalSolvers/LotkaVolterraForPlanets.java b/Project_Titan/src/main/java/com/ken10/NumericalSolvers/LotkaVolterraForPlanets.java
deleted file mode 100644
--- a/Project_Titan/src/main/java/com/ken10/NumericalSolvers/LotkaVolterraForPlanets.java	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
+++ /dev/null	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
@@ -1,121 +0,0 @@
-package com.ken10.NumericalSolvers;
-
-import java.util.Arrays;
-
-public class LotkaVolterraForPlanets {
-    static Object[][] planetStatesHardcoded = hardcodedDataset();
-    static final double gConstant = 6.6743e-20;
-    //had to convert from provided 6.6743e-11 which was expressed in meters
-    //we need to use kilometers. Verify tho //TODO
-
-    static Object[][] hardcodedDataset() {
-        Object[][] hardcodedPlanets = new Object[11][8];
-
-        Object[] sun = {"Sun", "0.00E+00", "0.00E+00", "0.00E+00", "0.00E+00", "0.00E+00", "0.00E+00", "1.99E+30"};
-        hardcodedPlanets[0] = sun;
-
-        Object[] mercury = {"Mercury", "-1.47E+08", "-2.97E+07", "2.75E+04", "5.31E+00", "-2.93E+01", "6.69E-04", "3.30E+23"};
-        hardcodedPlanets[1] = mercury;
-
-        Object[] venus = {"Venus", "-1.04E+08", "-3.19E+07", "5.55E+06", "9.89E+00", "-3.37E+01", "-1.03E+00", "4.87E+24"};
-        hardcodedPlanets[2] = venus;
-
-        Object[] earth = {"Earth", "-1.47E+08", "-2.97E+07", "2.75E+04", "5.31E+00", "-2.93E+01", "6.69E-04", "5.97E+24"};
-        hardcodedPlanets[3] = earth;
-
-        Object[] moon = {"Moon", "-1.47E+08", "-2.95E+07", "5.29E+04", "4.53E+00", "-2.86E+01", "6.73E-02", "7.35E+22"};
-        hardcodedPlanets[4] = moon;
-
-        Object[] mars = {"Mars", "-2.15E+08", "1.27E+08", "7.94E+06", "-1.15E+01", "-1.87E+01", "-1.11E-01", "6.42E+23"};
-        hardcodedPlanets[5] = mars;
-
-        Object[] jupiter = {"Jupiter", "5.54E+07", "7.62E+08", "-4.40E+06", "-1.32E+01", "1.29E+01", "5.22E-02", "1.90E+27"};
-        hardcodedPlanets[6] = jupiter;
-
-        Object[] saturn = {"Saturn", "1.42E+09", "-1.91E+08", "-5.33E+07", "7.48E-01", "9.55E+00", "-1.96E-01", "5.68E+26"};
-        hardcodedPlanets[7] = saturn;
-
-        Object[] titan = {"Titan", "1.42E+09", "-1.92E+08", "-5.28E+07", "5.95E+00", "7.68E+00", "2.54E-01", "1.35E+23"};
-        hardcodedPlanets[8] = titan;
-
-        Object[] uranus = {"Uranus", "1.62E+09", "2.43E+09", "-1.19E+07", "-5.72E+00", "3.45E+00", "8.70E-02", "8.68E+25"};
-        hardcodedPlanets[9] = uranus;
-
-        Object[] neptune = {"Neptune", "4.47E+09", "-5.31E+07", "-1.02E+08", "2.87E-02", "5.47E+00", "-1.13E-01", "1.02E+26"};
-        hardcodedPlanets[10] = neptune;
-
-        return hardcodedPlanets;
-    }
-
-    static double[][] computeDerivatives(double[][] state){
-        double[][] derivatives = new double[state.length][6];
-        for (int i = 0; i < state.length; i++) {
-            derivatives[i][0]=state[i][3]; // dx = dx/dt = Vx
-            derivatives[i][1]=state[i][4]; //dy = dy/dt = Vy
-            derivatives[i][2]=state[i][5]; //dz = dz/dt = Vz
-            double[] accelerations = computeAcceleration(state, i);
-            derivatives[i][3]=accelerations[0];
-            derivatives[i][4]=accelerations[1];
-            derivatives[i][5]=accelerations[2];
-        }
-        return derivatives;
-    }
-
-    static double[] computeAcceleration(double[][] state, int planetIndex) {
-        // Create an array to store the acceleration in x, y, and z directions
-        double[] acceleration = new double[3];
-        Arrays.fill(acceleration, 0.0);// Initialize to 0 for each direction
-
-        // state[0] = planet name
-        // state[1] = x coord
-        // state[2] = y coord
-        // state[3] = z coord
-        // state[4] = Vx
-        // state[5] = Vy
-        // state[6] = Vz
-        // state[7] = planet mass
-
-        // Get the current planet's mass and position
-        double massPlanet = Double.parseDouble(planetStatesHardcoded[planetIndex][7].toString());
-        double[] positionPlanet = {
-                state[planetIndex][0],  // x
-                state[planetIndex][1],  // y
-                state[planetIndex][2]   // z
-        };
-
-        // Iterate through all other planets to calculate the gravitational force on the current planet
-        for (int i = 0; i < state.length; i++) {
-            if (i == planetIndex) continue;  // Skip the planet itself
-
-            // Get the mass and position of the other planet
-            double massOtherPlanet = Double.parseDouble(planetStatesHardcoded[i][7].toString());
-            double[] positionOtherPlanet = {
-                    state[i][0],  // x
-                    state[i][1],  // y
-                    state[i][3]   // z
-            };
-
-            // Compute the difference vector (x_i - x_j)
-            double[] differenceVector = {
-                    positionPlanet[0] - positionOtherPlanet[0],  // dx
-                    positionPlanet[1] - positionOtherPlanet[1],  // dy
-                    positionPlanet[2] - positionOtherPlanet[2]   // dz
-            };
-
-            // Compute the distance between the two planets
-            double distanceSquared = Math.pow(differenceVector[0], 2) + Math.pow(differenceVector[1], 2) + Math.pow(differenceVector[2], 2);
-            double distance = Math.sqrt(distanceSquared);
-
-            // Gravitational force magnitude (F = G * m1 * m2 / r^2), but we will divide by mass for acceleration (a = F/m)
-            double forceMagnitude = -gConstant * massPlanet * massOtherPlanet / Math.pow(distance, 3); // G * m1 * m2 / r^3 (normalize by distance^3)
-
-            // Update acceleration components using the force magnitude and direction
-            acceleration[0] += forceMagnitude * differenceVector[0];
-            acceleration[1] += forceMagnitude * differenceVector[1];
-            acceleration[2] += forceMagnitude * differenceVector[2];
-        }
-
-        // Return the computed acceleration for the planet in the form of [ax, ay, az]
-        return acceleration;
-    }
-}
Index: Project_Titan/src/main/java/com/ken10/Entities/LaunchState.java
===================================================================
diff --git a/Project_Titan/src/main/java/com/ken10/Entities/LaunchState.java b/Project_Titan/src/main/java/com/ken10/Entities/LaunchState.java
deleted file mode 100644
--- a/Project_Titan/src/main/java/com/ken10/Entities/LaunchState.java	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
+++ /dev/null	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
@@ -1,10 +0,0 @@
-package com.ken10.Entities;
-
-import com.ken10.Other.Vector;
-
-public class LaunchState implements RocketState {
-    @Override
-    public void handle(Rocket rocket) {
-        rocket.velocity = new Vector(0,0,0);
-    }
-}
Index: Project_Titan/README.md
===================================================================
diff --git a/Project_Titan/README.md b/Project_Titan/README.md
deleted file mode 100644
--- a/Project_Titan/README.md	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
+++ /dev/null	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
@@ -1,62 +0,0 @@
-# Project 1.2: Manned Mission to Titan Simulation
-
-This project simulates a manned mission to Titan, one of Saturn's moons, and back to Earth. It features:
-
-* **Ordinary Differential Equation (ODE) Solver:** For accurate trajectory calculations.
-* **Graphical User Interface (GUI):** Visualizes the trajectories of planets and the spaceship.
-* **Orbital Mechanics Simulation:** Accurately simulates bringing the spaceship into orbit.
-
-## System Requirements
-
-This project is designed to run on most systems, as it doesn't have intensive performance requirements. However, you must have a Java Development Kit (JDK) installed.
-
-## Getting Started
-
-Follow these steps to run the simulation:
-
-**1. Install Maven:**
-
-* Ensure you have Maven installed and configured in your system's PATH environment variable.
-* Download Maven from the official [Apache Maven website](https://maven.apache.org/).
-* Follow the installation instructions for your operating system.
-
-**2. Clone the Repository:**
-
-* Open your preferred command-line terminal (e.g., Terminal on macOS/Linux, Command Prompt or PowerShell on Windows).
-* Use the following command to clone the repository:
-
-    ```bash
-    git clone [https://github.com/waildjeha/Project_1_2](https://github.com/waildjeha/Project_Titan)
-    ```
-
-**3. Navigate to the Cloned Folder:**
-
-* Use the `cd` command to navigate to the cloned project directory:
-
-    ```bash
-    cd Project_titan
-    ```
-
-    * Alternatively, you can open the cloned folder directly in your preferred Integrated Development Environment (IDE), such as IntelliJ IDEA or Eclipse.
-
-**4. Build and Run the Project:**
-
-* **Clean the Project:**
-    * To clean any previously built artifacts, run the following Maven command:
-
-        ```bash
-        mvn clean
-        ```
-
-* **Run the Simulation:**
-
-    * **Using an IDE:**
-        * If you are using an IDE, navigate to the `src/main/java` directory.
-        * Locate the `App.java` file.
-        * Run the `App.java` file as a Java application within your IDE.
-    * **Using the Command Line:**
-        * If you prefer to run the simulation from the command line, use the following Maven command:
-
-            ```bash
-            mvn javafx:run
-            ```
Index: src/main/java/com/ken10/Entities/PlanetInfo.java
===================================================================
diff --git a/src/main/java/com/ken10/Entities/PlanetInfo.java b/src/main/java/com/ken10/Entities/PlanetInfo.java
deleted file mode 100644
--- a/src/main/java/com/ken10/Entities/PlanetInfo.java	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
+++ /dev/null	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
@@ -1,12 +0,0 @@
-package com.ken10.Entities;
-import java.util.List;
-
-public class PlanetInfo {
-    public static void main(String[] args) {
-        List<Planets> planets = SolarSystem.CreatePlanets();
-
-        for (Planets planet : planets) {
-            System.out.println(planet);
-        }
-    }
-}
Index: Project_Titan/src/main/java/com/ken10/NumericalSolvers/RK4ForPlanets.java
===================================================================
diff --git a/Project_Titan/src/main/java/com/ken10/NumericalSolvers/RK4ForPlanets.java b/Project_Titan/src/main/java/com/ken10/NumericalSolvers/RK4ForPlanets.java
deleted file mode 100644
--- a/Project_Titan/src/main/java/com/ken10/NumericalSolvers/RK4ForPlanets.java	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
+++ /dev/null	(revision b10688b5c1244bbf122735018de4f072f57dd7cb)
@@ -1,83 +0,0 @@
-package com.ken10.NumericalSolvers;
-
-public class RK4ForPlanets {
-    double stepSize;
-    double time;
-    double startTime;
-    double endTime;
-    Object[][] state;
-
-    public RK4ForPlanets(double stepSize, double time, double startTime, double endTime, Object[][] state) {
-        this.stepSize = stepSize;
-        this.time = time;
-        this.startTime = startTime;
-        this.endTime = endTime;
-        this.state = state;
-    }
-
-    public void step() {
-        double h = stepSize;
-        double t = time;
-        double[][] y = adapterArray(state);
-        int n = state.length; //number of states of (planets/populations etc.) to evaluate
-        int m = state[0].length;
-        // First stage
-        double[][] k1 = LotkaVolterraForPlanets.computeDerivatives(y);
-
-        // Second stage
-        double t2 = t + h / 2;
-        double[][] y2 = new double[n][m-2];
-        for (int i = 0; i < n; i++) {
-            y2[i] = new double[m];
-            for (int j = 0; j < m; j++) {
-                y2[i][j] = y[i][j] + (h / 2) * k1[i][j];
-            }
-        }
-        double[][] k2 = LotkaVolterraForPlanets.computeDerivatives(y2);
-
-        // Third stage
-        double t3 = t + h / 2;
-        double[][] y3 = new double[n][m];
-        for (int i = 0; i < n; i++) {
-            y3[i] = new double[m];
-            for (int j = 0; j < m; j++) {
-                y3[i][j] = y2[i][j] + (h / 2) * k2[i][j];
-            }
-        }
-        double[][] k3 = LotkaVolterraForPlanets.computeDerivatives(y3);
-
-        // Fourth stage
-        double t4 = t + h;
-        double[][] y4 = new double[n][m];
-        for (int i = 0; i < n; i++) {
-            y4[i] = new double[m];
-            for (int j = 0; j < m; j++) {
-                y4[i][j] = y3[i][j] + (h / 2) * k3[i][j];
-            }
-        }
-        double[][] k4 = LotkaVolterraForPlanets.computeDerivatives(y4);
-
-        // Combine stages to update state
-        for (int i = 0; i < n; i++) {
-            var rowState = new double[m];
-            var yRow = y[i];
-            for (int j = 0; j < m; j++) {
-                rowState[j] = yRow[j] + (h / 6) * (k1[i][j] + 2 * k2[i][j] + 2 * k3[i][j] + k4[i][j]);
-            }
-            for (int k = 1; k < m-1; k++) {
-                state[i][k] = rowState[k-1];
-            }
-        }
-        time += stepSize;
-    }
-
-    private double[][] adapterArray(Object[][] state) {
-        double[][] adapterArray = new double[state.length][state[0].length-2];
-        for (int i = 0; i < state.length; i++) {
-            for (int j = 1; j < state[0].length-1; j++) {
-                adapterArray[i][j] = Double.parseDouble(state[i][j].toString());
-            }
-        }
-        return adapterArray;
-    }
-}
Index: src/main/java/com/ken10/Entities/ExamplePlanetMovement.java
===================================================================
diff --git a/src/main/java/com/ken10/Entities/ExamplePlanetMovement.java b/src/main/java/com/ken10/Entities/ExamplePlanetMovement.java
new file mode 100644
--- /dev/null	(date 1744103635074)
+++ b/src/main/java/com/ken10/Entities/ExamplePlanetMovement.java	(date 1744103635074)
@@ -0,0 +1,35 @@
+package com.ken10.Entities;
+import com.ken10.NumericalSolvers.RK4ForPlanets;
+
+import java.util.List;
+
+public class ExamplePlanetMovement {
+    public static void main(String[] args) {
+        List<Planets> planets = SolarSystem.CreatePlanets();
+        double stepSize = 3600; //1hr in seconds
+        double startTime = 0;
+        double endTime = 86400 * 365; //seconds in a yr
+
+        RK4ForPlanets simulator = new RK4ForPlanets(stepSize, startTime, endTime, planets);
+        System.out.println(planets.get(0));
+
+
+        for (double t = startTime; t <= endTime; t += stepSize) {
+            simulator.step();
+
+
+            if (t % (86400 * 10) == 0) { //example for every 10 days
+                System.out.println("Time: " + t / 86400 + " days");
+                for (Planets p : planets) {
+                    System.out.println(p);
+                    System.out.println("");
+                }
+                System.out.println("");
+            }
+        }
+
+
+    }
+}
+
+
Index: .idea/encodings.xml
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1743429543226)
+++ b/.idea/encodings.xml	(date 1743429543226)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1743429543218)
+++ b/.idea/misc.xml	(date 1743429543218)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_23" default="true" project-jdk-name="openjdk-23" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1743429520329)
+++ b/.idea/.gitignore	(date 1743429520329)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: .idea/compiler.xml
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1743429543209)
+++ b/.idea/compiler.xml	(date 1743429543209)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="titan" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1743429543234)
+++ b/.idea/jarRepositories.xml	(date 1743429543234)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1743429651624)
+++ b/.idea/vcs.xml	(date 1743429651624)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
